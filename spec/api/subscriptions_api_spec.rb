=begin
#Sematext Cloud API

#API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.34
=end

require 'spec_helper'
require 'json'

# Unit tests for SematextCloud::SubscriptionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SubscriptionsApi' do
  before do
    # run before each test
    @instance = SematextCloud::SubscriptionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubscriptionsApi' do
    it 'should create an instance of SubscriptionsApi' do
      expect(@instance).to be_instance_of(SematextCloud::SubscriptionsApi)
    end
  end

  # unit tests for create_for_app_using_post
  # Create App subscription
  # @param body subscription
  # @param app_id appId
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionResponse]
  describe 'create_for_app_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_for_dash_using_post1
  # Create dashboard subscription
  # @param body subscription
  # @param dash_id dashId
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionResponse]
  describe 'create_for_dash_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_using_delete3
  # Delete subscription
  # @param updateable_subscription_id updateableSubscriptionId
  # @param [Hash] opts the optional parameters
  # @return [GenericMapBasedApiResponse]
  describe 'delete_using_delete3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_using_get2
  # Get subscriptions for an App
  # @param app_id appId
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionsResponse]
  describe 'list_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_using_get5
  # Get current account&#x27;s subscriptions
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionsResponse]
  describe 'list_using_get5 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_app_report_using_post1
  # Email an App report
  # @param body emailDto
  # @param app_id appId
  # @param [Hash] opts the optional parameters
  # @return [MailReportResponse]
  describe 'send_app_report_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_dash_report_using_post1
  # Email a dashboard report
  # @param body emailDto
  # @param dash_id dashId
  # @param [Hash] opts the optional parameters
  # @return [MailReportResponse]
  describe 'send_dash_report_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for toggle_enabled_using_put
  # Toggle subscription status
  # @param body dto
  # @param updateable_subscription_id updateableSubscriptionId
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionResponse]
  describe 'toggle_enabled_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_for_app_using_put1
  # Update App subscription
  # @param body subscription
  # @param app_id appId
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionResponse]
  describe 'update_for_app_using_put1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_for_dash_using_put
  # Update dashboard subscription
  # @param body subscription
  # @param dash_id dashId
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionResponse]
  describe 'update_for_dash_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
