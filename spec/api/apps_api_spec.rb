=begin
#Sematext Cloud API

#API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for stcloud::AppsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AppsApi' do
  before do
    # run before each test
    @instance = stcloud::AppsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AppsApi' do
    it 'should create an instance of AppsApi' do
      expect(@instance).to be_instance_of(stcloud::AppsApi)
    end
  end

  # unit tests for get_app_types_using_get
  # Get all App types supported for the account identified with apiKey
  # @param [Hash] opts the optional parameters
  # @return [GenericApiResponse]
  describe 'get_app_types_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_using_get
  # Gets defails for one particular App
  # @param any_state_app_id anyStateAppId
  # @param [Hash] opts the optional parameters
  # @return [GenericApiResponse]
  describe 'get_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invite_app_guests_using_post
  # Invite guests to an app
  # @param invitation For &#x60;app&#x60; and &#x60;apps&#x60; fields only &#x60;id&#x60; needs to be populated.Other fields can be left empty or with default values
  # @param [Hash] opts the optional parameters
  # @return [GenericApiResponse]
  describe 'invite_app_guests_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_apps_users_using_get
  # Get all users of apps accessible to this account
  # @param [Hash] opts the optional parameters
  # @return [GenericApiResponse]
  describe 'list_apps_users_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_using_get
  # Get all apps accessible by account identified with apiKey
  # @param [Hash] opts the optional parameters
  # @return [GenericApiResponse]
  describe 'list_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_description_using_put
  # Update description of the app
  # App can be in any state
  # @param any_state_app_id App Id
  # @param [Hash] opts the optional parameters
  # @option opts [AppDescription] :update_details Update Details
  # @return [GenericApiResponse]
  describe 'update_description_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_using_put1
  # Update app
  # App can be in any state
  # @param dto dto
  # @param any_state_app_id App Id
  # @param [Hash] opts the optional parameters
  # @return [GenericApiResponse]
  describe 'update_using_put1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
